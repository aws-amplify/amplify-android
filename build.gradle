/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all" << "-Werror"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    buildToolsVersion = "29.0.2"
    compileSdkVersion = 29
    minSdkVersion = 16
    targetSdkVersion = 29

    awsSdkVersion = '2.16.12'
    dependency = [
        android: [
            desugartools: 'com.android.tools:desugar_jdk_libs:1.0.5',
        ],
        androidx: [
            v4support: 'androidx.legacy:legacy-support-v4:1.0.0',
            annotation: 'androidx.annotation:annotation:1.1.0',
            appcompat: 'androidx.appcompat:appcompat:1.1.0',
            core: 'androidx.core:core:1.3.0',
            multidex: 'androidx.multidex:multidex:2.0.1',
            test: [
                core: 'androidx.test:core:1.2.0',
                runner: 'androidx.test:runner:1.2.0',
                junit: 'androidx.test.ext:junit:1.1.1'
            ]
        ],

        aws: [
            s3: "com.amazonaws:aws-android-sdk-s3:$awsSdkVersion",
            comprehend: "com.amazonaws:aws-android-sdk-comprehend:$awsSdkVersion",
            authcore: "com.amazonaws:aws-android-sdk-auth-core:$awsSdkVersion",
            cognitoauth: "com.amazonaws:aws-android-sdk-cognitoauth:$awsSdkVersion",
            pinpoint: "com.amazonaws:aws-android-sdk-pinpoint:$awsSdkVersion",
            mobileclient: "com.amazonaws:aws-android-sdk-mobile-client:$awsSdkVersion",
            polly: "com.amazonaws:aws-android-sdk-polly:$awsSdkVersion",
            rekognition: "com.amazonaws:aws-android-sdk-rekognition:$awsSdkVersion",
            textract: "com.amazonaws:aws-android-sdk-textract:$awsSdkVersion",
            translate: "com.amazonaws:aws-android-sdk-translate:$awsSdkVersion"
        ],

        okhttp: 'com.squareup.okhttp3:okhttp:4.7.2',
        gson: 'com.google.code.gson:gson:2.8.6',
        rxandroid: 'io.reactivex.rxjava2:rxandroid:2.1.1',
        rxjava: 'io.reactivex.rxjava2:rxjava:2.2.13',
        tensorflow: 'org.tensorflow:tensorflow-lite:2.0.0',
        uuidgen: 'com.fasterxml.uuid:java-uuid-generator:4.0.1',

        junit: 'junit:junit:4.13',
        mockito: 'org.mockito:mockito-core:3.1.0',
        mockwebserver: 'com.squareup.okhttp3:mockwebserver:4.7.2',
        robolectric: 'org.robolectric:robolectric:4.3.1',
        jsonassert: 'org.skyscreamer:jsonassert:1.5.0'
    ]
}

subprojects { project ->
    afterEvaluate {
        configureAndroidLibrary(project)
    }
}

private void configureAndroidLibrary(Project project) {
    project.android {
        buildToolsVersion rootProject.ext.buildToolsVersion
        compileSdkVersion rootProject.ext.compileSdkVersion

        defaultConfig {
            multiDexEnabled true
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionCode rootProject.findProperty('VERSION_CODE').toInteger()
            versionName rootProject.findProperty('VERSION_NAME')
            testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
            consumerProguardFiles rootProject.file('configuration/consumer-rules.pro')

            testOptions {
                unitTests {
                    includeAndroidResources = true
                }
            }
        }

        lintOptions {
            warningsAsErrors true
            abortOnError true
            enable 'UnusedResources'
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        buildTypes {
            debug {
                testCoverageEnabled = true
            }
        }
    }

    project.dependencies {
        coreLibraryDesugaring dependency.android.desugartools
    }
}

apply from: rootProject.file('configuration/coverage.gradle')

