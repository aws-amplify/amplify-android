/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amplifyframework.hub;

import androidx.core.util.ObjectsCompat;

import java.util.UUID;

/**
 * An event is the top-level data envelope that gets passed around on
 * the Hub.  Events are published onto the hub, and subscribers
 * subscribe to the hub to receive events.
 */
public final class HubEvent {
    private final String name;
    private final Object data;
    private final UUID uuid;

    /**
     * Construct a Hub event that has no event data.
     * @param name the name of the event generated by the operation
     */
    public HubEvent(String name) {
        this(name, null);
    }

    /**
     * Construct a Hub event.
     * @param name The name of this event
     * @param data The data of the event generated by the operation
     */
    public HubEvent(String name, Object data) {
        this.name = name;
        this.data = data;
        this.uuid = UUID.randomUUID();
    }

    /**
     * Gets the name, tag, or grouping of the HubEvent. Recommended to be a small string without spaces,
     * such as `signIn` or `hang_up`. For AmplifyOperations, this will be a concatenation of the
     * category display name and a short name of the operation type, as in "Storage.getURL" or
     * "Storage.downloadFile".
     * @return Event name
     */
    public String getName() {
        return name;
    }

    /**
     * Gets a free-form structure used to pass objects or custom data. For HubEvents that are generated
     * from AmplifyOperations, this field will be the Operation's associated AsyncEvent.
     * @return Event data
     */
    public Object getData() {
        return data;
    }

    /**
     * Gets a unique identifier that identifies the event.
     * @return Unique ID for this event
     */
    public UUID getId() {
        return uuid;
    }

    @Override
    public String toString() {
        return "HubEvent{" +
                "name='" + name + '\'' +
                ", data=" + data +
                ", uuid=" + uuid +
                '}';
    }

    @Override
    public boolean equals(Object thatObject) {
        if (this == thatObject) {
            return true;
        }
        if (thatObject == null || getClass() != thatObject.getClass()) {
            return false;
        }

        HubEvent hubEvent = (HubEvent) thatObject;

        if (!ObjectsCompat.equals(name, hubEvent.name)) {
            return false;
        }
        if (!ObjectsCompat.equals(data, hubEvent.data)) {
            return false;
        }
        return ObjectsCompat.equals(uuid, hubEvent.uuid);
    }

    @SuppressWarnings("checkstyle:MagicNumber")
    @Override
    public int hashCode() {
        int result = name != null ? name.hashCode() : 0;
        result = 31 * result + (data != null ? data.hashCode() : 0);
        result = 31 * result + (uuid != null ? uuid.hashCode() : 0);
        return result;
    }
}
