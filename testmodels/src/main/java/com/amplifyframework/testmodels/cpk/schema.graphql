# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Blog @model {
  blogId: String! @primaryKey(sortKeyFields: ["siteId"])
  siteId: ID!
  name: String!
  author: User! @hasOne
  posts: [Post]! @hasMany
}

type Post @model {
  postId: ID! @primaryKey(sortKeyFields: ["title", "createdAt", "rating"])
  title: String!
  createdAt: AWSDateTime!
  rating: Float!
  blog: Blog @belongsTo
  comments: [Comment] @hasMany
}

type User @model {
  userId: ID!
  favoritePost: Post
}

type Comment @model {
  commentId: ID! @primaryKey
  post: Post! @belongsTo
  content: String!
}

type Item @model {
  customKey: String! @primaryKey
  name: String!
}

type IntModelWithIdentifier @model {
  customKey: Int! @primaryKey
}

type StringModelWithIdentifier @model {
  customKey: String! @primaryKey
}

type BlogOwnerCPK @model
{
  id: ID!  @primaryKey(sortKeyFields: ["name"])
  name: String!
  blogs: [BlogCPK] @hasMany(indexName: "byBlogOwner3", fields: ["id"])
  posts: [PostCPK] @hasMany(indexName: "byBlogOwner3", fields: ["id"])
  createdAt: AWSDateTime
}

type BlogCPK @model {
  id: ID! @primaryKey(sortKeyFields: ["name"])
  blogOwnerID: ID! @index(name: "byBlogOwner3")
  name: String!
  createdAt: AWSDateTime
  posts: [PostCPK] @hasMany(indexName: "byBlog3", fields: ["id"])
  owner: BlogOwnerCPK @belongsTo(fields: ["blogOwnerID"])
}

type PostCPK @model {
  id: ID! @primaryKey(sortKeyFields: ["title"])
  blogID: ID! @index(name: "byBlog3")
  blogOwnerID: ID! @index(name: "byBlogOwner3")
  title: String!
  rating: Int!
  createdAt: AWSDateTime
  blog: BlogCPK @belongsTo(fields: ["blogID"])
  blogOwner: BlogOwnerCPK @belongsTo(fields: ["blogOwnerID"])
}

